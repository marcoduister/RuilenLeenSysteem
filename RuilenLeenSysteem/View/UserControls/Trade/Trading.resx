<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Btn_ProductAdd.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        GjX+ATFiElRXXdM0AAAAAElFTkSuQmCC
</value>
  </data>
</root>