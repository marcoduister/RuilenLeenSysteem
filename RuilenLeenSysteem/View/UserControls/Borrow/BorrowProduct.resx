<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Btn_ProductEdit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>